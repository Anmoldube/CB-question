public class Stack {
    private int[] data;
    private int top = 0;

    public Stack() {
        this.data = new int[7];
    }

    public Stack(int cap) {
        this.data = new int[cap];
    }

    public boolean isEmpty() {
        return this.top == 0;
    }

    public void push(int item) {
        if (isFull()) {
            throw new IllegalStateException("Stack is full");
        }
        this.data[this.top] = item;
        this.top++;
    }

    public int pop() {
        if (isEmpty()) {
            throw new IllegalStateException("Stack is empty");
        }
        this.top--;
        return this.data[this.top];
    }

    public boolean isFull() {
        return this.top == data.length;
    }

    public int peek() {
        if (isEmpty()) {
            throw new IllegalStateException("Stack is empty");
        }
        return this.data[this.top - 1];
    }

    public int size() {
        return this.top;
    }

    public void display() {
        for (int i = 0; i < this.top; i++) {
            System.out.print(this.data[i] + " ");
        }
        System.out.println();
    }
}



client
------------------------------------------------------------------------------------------------9-9-9-9-9-------------------------------------------------------------------------------------
public class stack_client {
    public static void main(String[] args) {
        Stack s = new Stack();
        //s.cap  = 6;
        s.push(10);
        s.push(20);
        s.push(30);
        s.push(40);
        s.push(50);
        s.push(60);
        s.push(70);
        s.display();
        System.out.println(s.pop());
        s.display();
        s.push(22);
        s.push(222);
    }
}




