class Solution {
    public boolean exist(char[][] board, String word) {
     for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] != word.charAt(0)) {
                    continue;
                } else {
                    boolean ans = FindWord(board, i, j, word, 0);
                    if (ans == true) {
                        System.out.println(ans);
                        return true;
                    }
                }
            }
        }
        return false;
    }

    public static boolean FindWord(char[][] board, int cr, int cc, String str, int idx) {
        if(idx==str.length()){
            return true;
        }
        if (cc < 0 || cc >= board[0].length || cr < 0 || cr >= board.length || board[cr][cc] != str.charAt(idx)) {
            return false;
        }
        int[] r = { -1, 1, 0, 0 };
        int[] c = { 0, 0, 1, -1 };
        board[cr][cc] = '*';
        for (int i = 0; i < c.length; i++) {
            boolean ans = FindWord(board, cr + r[i], cc + c[i], str, idx+1);
             if(ans == true)
                return true;
        }
        board[cr][cc] = str.charAt(idx);
        return false;
    }
}
