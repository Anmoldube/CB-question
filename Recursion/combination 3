class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
     List<List<Integer>> list =  new ArrayList<>();
            ArrayList<Integer> ll  =  new ArrayList<>();
           boolean[] board = new boolean[9];
        queen(k, n, 1,list,ll);
        // System.out.println(list);
        return list;
   }
    public static void queen(int k, int n , int start, List<List<Integer>> list, ArrayList<Integer> ll){
         if (k == 0 && n == 0) {
             list.add(new ArrayList<Integer>(ll));
            return;
        }
        if (start > n || k == 0 || start == 10) {
            return;
        }
            for(int i = start; i<=9 && i <= n; i++){
                ll.add(i);
                queen( k-1, n-i , i+1,list,ll);
                ll.remove(ll.size()-1);
            }
    }
}
